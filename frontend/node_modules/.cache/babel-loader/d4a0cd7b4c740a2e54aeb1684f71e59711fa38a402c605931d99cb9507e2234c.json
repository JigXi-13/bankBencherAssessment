{"ast":null,"code":"var _jsxFileName = \"/Users/jiggy/Desktop/bankBencherAssessment/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport apiService from \"./api/apiService\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const {\n        data\n      } = await apiService.getProducts();\n      // Handle the response data\n      console.log(data);\n      setProducts(data);\n    } catch (error) {\n      // Error handling is already done in the interceptor,\n      // but you can add component-specific error handling here\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addProduct = async () => {\n    // POST request example\n    //  const newProduct = { title: \"New Product\", price: 10.99 };\n    //  ApiService.post(API_URLS.POST_PRODUCT, newProduct)\n    //    .then((response) => {\n    //      console.log(\"Product added:\", response.data);\n    //    })\n    //    .catch((error) => {\n    //      console.error(\"Error adding product:\", error);\n    //    });\n\n    try {\n      const newProduct = {\n        title: \"New Product\",\n        price: 10.99\n      };\n      const {\n        data\n      } = await apiService.createProduct(newProduct);\n      // Handle the response data\n      console.log(data);\n      // setProducts(data);\n    } catch (error) {\n      // Error handling is already done in the interceptor,\n      // but you can add component-specific error handling here\n      console.error(\"Error adding product:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    // Here we can render Shimmer UI or Skeleton UI\n    console.log(\"loading data...\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: product.title\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addProduct,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N1oISKsh0LP2ztdYtBJQM9BMmog=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","apiService","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","loading","setLoading","products","setProducts","fetchProducts","data","getProducts","console","log","error","addProduct","newProduct","title","price","createProduct","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","onClick","_c","$RefreshReg$"],"sources":["/Users/jiggy/Desktop/bankBencherAssessment/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport apiService from \"./api/apiService\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const { data } = await apiService.getProducts();\n      // Handle the response data\n      console.log(data);\n      setProducts(data);\n    } catch (error) {\n      // Error handling is already done in the interceptor,\n      // but you can add component-specific error handling here\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addProduct = async () => {\n    // POST request example\n    //  const newProduct = { title: \"New Product\", price: 10.99 };\n    //  ApiService.post(API_URLS.POST_PRODUCT, newProduct)\n    //    .then((response) => {\n    //      console.log(\"Product added:\", response.data);\n    //    })\n    //    .catch((error) => {\n    //      console.error(\"Error adding product:\", error);\n    //    });\n\n    try {\n      const newProduct = { title: \"New Product\", price: 10.99 };\n      const { data } = await apiService.createProduct(newProduct);\n      // Handle the response data\n      console.log(data);\n      // setProducts(data);\n    } catch (error) {\n      // Error handling is already done in the interceptor,\n      // but you can add component-specific error handling here\n      console.error(\"Error adding product:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    // Here we can render Shimmer UI or Skeleton UI\n    console.log(\"loading data...\");\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Products</h1>\n      <ul>\n        {products.map((product) => (\n          <li key={product.id}>{product.title}</li>\n        ))}\n      </ul>\n      <button onClick={addProduct}>Add Product</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMZ,UAAU,CAACa,WAAW,CAAC,CAAC;MAC/C;MACAC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBF,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACA;MACAF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAI;MACF,MAAMC,UAAU,GAAG;QAAEC,KAAK,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAM,CAAC;MACzD,MAAM;QAAER;MAAK,CAAC,GAAG,MAAMZ,UAAU,CAACqB,aAAa,CAACH,UAAU,CAAC;MAC3D;MACAJ,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACA;MACAF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX;IACAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,oBAAOX,OAAA,CAAAF,SAAA,mBAAI,CAAC;EACd;EAEA,oBACEE,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAAmB,QAAA,EACGd,QAAQ,CAACmB,GAAG,CAAEC,OAAO,iBACpBzB,OAAA;QAAAmB,QAAA,EAAsBM,OAAO,CAACV;MAAK,GAA1BU,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MAAQ2B,OAAO,EAAEd,UAAW;MAAAM,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACrB,EAAA,CAlEQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}