{"ast":null,"code":"import axios from \"axios\";\n\n// 1. Axios Setup\nconst baseURL = \"https://api.escuelajs.co/api/v1\";\nconst axiosInstance = axios.create({\n  baseURL\n});\n\n// 4. URL constants\nconst API_ENDPOINTS = {\n  PRODUCTS: \"/products/\"\n  // Add more endpoints as needed\n};\n\n// 2. Interceptors\naxiosInstance.interceptors.request.use(config => {\n  // Add any request headers here\n  config.headers[\"Content-Type\"] = \"application/json\";\n  // We can add authentication token here if required\n  // config.headers['Authorization'] = `Bearer ${getToken()}`;\n  return config;\n}, error => Promise.reject(error));\naxiosInstance.interceptors.response.use(response => response, error => {\n  // 5. Status Codes\n  if (error.response) {\n    switch (error.response.status) {\n      case 400:\n        console.error(\"Bad Request\");\n        break;\n      case 401:\n        console.error(\"Unauthorized\");\n        // Handle unauthorized access (e.g., redirect to login)\n        break;\n      case 404:\n        console.error(\"Not Found\");\n        break;\n      case 500:\n        console.error(\"Internal Server Error\");\n        break;\n      default:\n        console.error(`Unexpected error: ${error.response.status}`);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","baseURL","axiosInstance","create","API_ENDPOINTS","PRODUCTS","interceptors","request","use","config","headers","error","Promise","reject","response","status","console"],"sources":["/Users/jiggy/Desktop/bankBencherAssessment/frontend/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\n\n// 1. Axios Setup\nconst baseURL = \"https://api.escuelajs.co/api/v1\";\nconst axiosInstance = axios.create({ baseURL });\n\n// 4. URL constants\nconst API_ENDPOINTS = {\n  PRODUCTS: \"/products/\",\n  // Add more endpoints as needed\n};\n\n// 2. Interceptors\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Add any request headers here\n    config.headers[\"Content-Type\"] = \"application/json\";\n    // We can add authentication token here if required\n    // config.headers['Authorization'] = `Bearer ${getToken()}`;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // 5. Status Codes\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          console.error(\"Bad Request\");\n          break;\n        case 401:\n          console.error(\"Unauthorized\");\n          // Handle unauthorized access (e.g., redirect to login)\n          break;\n        case 404:\n          console.error(\"Not Found\");\n          break;\n        case 500:\n          console.error(\"Internal Server Error\");\n          break;\n        default:\n          console.error(`Unexpected error: ${error.response.status}`);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,iCAAiC;AACjD,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAAEF;AAAQ,CAAC,CAAC;;AAE/C;AACA,MAAMG,aAAa,GAAG;EACpBC,QAAQ,EAAE;EACV;AACF,CAAC;;AAED;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV;EACAA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACnD;EACA;EACA,OAAOD,MAAM;AACf,CAAC,EACAE,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEDT,aAAa,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CACpCM,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MAC3B,KAAK,GAAG;QACNC,OAAO,CAACL,KAAK,CAAC,aAAa,CAAC;QAC5B;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,cAAc,CAAC;QAC7B;QACA;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,WAAW,CAAC;QAC1B;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,uBAAuB,CAAC;QACtC;MACF;QACEK,OAAO,CAACL,KAAK,CAAC,qBAAqBA,KAAK,CAACG,QAAQ,CAACC,MAAM,EAAE,CAAC;IAC/D;EACF;EACA,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}